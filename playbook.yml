---
- hosts: all
  vars_files:
    - variables.yml
    - secrets.yml
  pre_tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      register: output
      changed_when: output.stdout != ""
      tags: always

  tasks:
    - name: Add Spotify apt key
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 0DF731E45CE24F27EEEB1450EFDC8610341D9410
      become: yes
      become_user: root

    - name: Add Spotify apt repo
      apt_repository:
        repo: deb http://repository.spotify.com stable non-free
        state: present
      become: yes
      become_user: root

    - name: Update Apt
      apt: 
        update_cache: yes
      become: yes
      become_user: root

    # TODO: maybe need to compile vim
    - name: Install packages
      apt: 
        name: "{{ item }}"
        state: latest
      become: yes
      become_user: root
      with_items:
        - vim-gtk
        - git
        - xmonad
        - xmobar
        - zsh
        - tmux
        - tree
        - build-essential
        - cmake
        - python-dev
        - python3-dev
        - fonts-powerline
        - libssl-dev
        - libreadline-dev
        - htop
        - xscreensaver
        - libvdpau-va-gl1
        - dmenu
        - spotify-client
        - silversearcher-ag

    - name: Install Firefox
      apt:
        name: firefox=45*
        state: present
      become: yes
      become_user: root

    - name: Hold Firefox version
      dpkg_selections:
        name: firefox
        selection: hold
      become: yes
      become_user: root

    # Install Hack fonts
    - stat: path=/usr/local/share/fonts/ttf/Hack-Regular.ttf
      register: hack_font

    - name: Install Hack fonts
      shell: wget -O /tmp/z.$$ "https://github.com/source-foundry/Hack/releases/download/v3.000/Hack-v3.000-ttf.zip" && unzip -f -d /usr/local/share/fonts /tmp/z.$$ && rm /tmp/z.$$
      when: hack_font.stat.exists == False
      become: yes
      become_user: root
      register: install_hack_font

    - name: Run fc-cache
      command: fc-cache -fv
      when: install_hack_font.changed

    - name: Generate SSH keys for user
      user:
        name: '{{ username }}'
        shell: /usr/bin/zsh
        generate_ssh_key: yes
      become: yes
      become_user: root

    - shell: cat ~/.ssh/id_rsa.pub
      register: ssh_pub_key
    - command: hostname
      register: hostname
    - name: Register public key with Github
      github_key:
        name: '{{ hostname.stdout }}'
        pubkey: '{{ ssh_pub_key.stdout }}'
        token: '{{ github_token }}'

    - name: Install rbenv
      git:
        repo: 'ssh://git@github.com/rbenv/rbenv.git'
        dest: ~/.rbenv
        accept_hostkey: yes

    - name: Install ruby-build
      git:
        repo: 'ssh://git@github.com/rbenv/ruby-build.git'
        dest: ~/.rbenv/plugins/ruby-build
        accept_hostkey: yes

    - name: Checkout config repo
      git:
        repo: 'ssh://git@github.com/LanJian/config.git'
        dest: ~/projects/config
        accept_hostkey: yes

    - name: Install Oh My Zsh
      shell: 'sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"'
      ignore_errors: yes

    - name: Install config files
      command: './install.sh'
      args:
        chdir: ~/projects/config

    - name: Check ruby {{ ruby_version }} installed
      command: zsh -lc "~/.rbenv/bin/rbenv versions | grep {{ ruby_version }}"
      register: ruby_installed
      ignore_errors: yes

    - name: Install ruby {{ ruby_version }}
      command: zsh -lc "~/.rbenv/bin/rbenv install {{ ruby_version }}"
      when: ruby_installed|failed

    - name: Set global ruby to {{ ruby_version }}
      command: zsh -lc "~/.rbenv/bin/rbenv global {{ ruby_version }}"
